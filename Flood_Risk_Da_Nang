/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var table2 = ee.FeatureCollection("users/hadifarhadi18/shape"),
    Collection_L8 = ee.ImageCollection("LANDSAT/LC08/C01/T1_RT"),
    imageVisParam = {"opacity":1,"bands":["B4","B3","B2"],"min":7398.413333333333,"max":11210.253333333332,"gamma":1},
    imageVisParam2 = {"opacity":1,"bands":["nd"],"min":0.07305994497146956,"max":0.5207835749730996,"palette":["ff370a","fff80e","1dff0e","1b8508"]},
    imageVisParam3 = {"opacity":1,"bands":["nd"],"palette":["ff4116","3eff0e","0f580e"]},
    imageVisParam4 = {"opacity":1,"bands":["nd"],"min":-0.4277750490128757,"max":-0.11838577900956043,"gamma":1},
    SRTM = ee.Image("USGS/SRTMGL1_003"),
    imageVisParam5 = {"opacity":1,"bands":["slope"],"palette":["ff2704","ff870c","fbff16","62ff12","12ffff","083dff","28308d"]},
    imageVisParam6 = {"opacity":1,"bands":["elevation"],"min":386.8,"max":2081.2,"palette":["4dfff7","fcff23","30870b","ffab12","ff2c0a","ab571c"]},
    imageVisParam7 = {"opacity":1,"bands":["aspect"],"palette":["1d39ff","50ff08","ff6858","5aa4ff","6effff","ff9d93","fdff60","d280cc"]},
    imageVisParam8 = {"opacity":1,"bands":["aspect"],"palette":["1d39ff","50ff08","ff6858","5aa4ff","6effff","ff9d93","fdff60","d280cc","a79dff","ff5a35","ffe3e2","ffa3b0","ff3bcc","503bff"]},
    imageVisParam9 = {"opacity":1,"bands":["aspect"],"palette":["1d39ff","50ff08","ff6858","5aa4ff","6effff","ff9d93","fdff60","d280cc","a79dff","ff5a35","ffe3e2","ffa3b0","ff3bcc","503bff","ffbfb1","fff149","366e24","ff0c5a","ff3592","baffff","899dff","40954f","8998ff","050c1f"]},
    imageVisParam10 = {"opacity":1,"bands":["b0","b10","b30"],"min":4.3,"max":6.7,"gamma":1},
    imageVisParam11 = {"opacity":1,"bands":["nd"],"palette":["1310ff","ffc164"]};
/***** End of imports. If edited, may not auto-convert in the playground. *****/

 
var admin = ee.FeatureCollection("FAO/GAUL/2015/level1");
// filter Da Nang Area
var table = admin.filter('ADM1_CODE == 3340');

 
Map.centerObject(table);
Map.addLayer(table,{},'Studt Area',true,0.3)
var river = ee.FeatureCollection("WWF/HydroSHEDS/v1/FreeFlowingRivers")
.filterBounds(table);
var river = river.style({
  color:'blue',
  width:1
});
 
Map.addLayer(river.clip(table),false,'River',false);
//------------------------------------------------------------
 
var river = ee.FeatureCollection("WWF/HydroSHEDS/v1/FreeFlowingRivers")
.filterBounds(table);
var river = river.style({
  color:'blue',
  width:10
});
 
Map.addLayer(river.clip(table),false,'WRD',false);
//------------------------------------------------------------------
 
 
// Exsample of Export Vector Layer
 
Export.table.toDrive({
  collection: river,
  description:'River',
  fileFormat: 'SHP'
});
 
//-------------------------------------------------------------
 
var Collection_L8_new = Collection_L8
                        .filterDate('2020-06-01','2022-11-30')
                        .filterBounds(table)
                        .filter(ee.Filter.lt('CLOUD_COVER',3))
print(Collection_L8_new,'Number of L8 Images');
 
Map.addLayer(Collection_L8_new.mean().clip(table),imageVisParam,'Landsat-8',false);
// -----------------------------------------------------------
 
var NDVI_func = function(img){
  var NDVI = img.normalizedDifference(['B5','B4']);
  return NDVI;
};
var NDVI_Collection = Collection_L8_new.map(NDVI_func);
Map.addLayer(NDVI_Collection.mean(),{},'NDVI',false);
var NDVI_mean = NDVI_Collection.mean();
Map.addLayer(NDVI_mean.clip(table),imageVisParam2,'NDVI_Mean',false)
 
var VEG = NDVI_mean.gt(0.2).clip(table);
Map.addLayer(VEG,imageVisParam3,'Vegetation',false)
 
//------------------------------------------------------------------
 
var NDWI_func = function(img){
  var NDWI = img.normalizedDifference(['B4','B7']);
  return NDWI;
};
var NDWI_Collection = Collection_L8_new.map(NDWI_func);
var NDWI_mean = NDWI_Collection.mean().gt(0.1);
Map.addLayer(NDWI_mean.clip(table),imageVisParam11,'Water',true)
//--------------------------------------------------------------
var Terrain = ee.call('Terrain',SRTM)
var Slope = Terrain.select('slope').clip(table);
Map.addLayer(Slope,imageVisParam5,'Slope',false);
 
var elevation = Terrain.select('elevation').clip(table);
Map.addLayer(elevation,imageVisParam6,'Elevation',false);
 
var aspect = Terrain.select('aspect').clip(table);
Map.addLayer(aspect,imageVisParam7,'Aspect Slope',false);
//---------------------------------------------------------------
 
var dataset = ee.Image("KNTU/LiDARLab/IranLandCover/V1");
 
var visualization = {
  bands: ['classification']
};
 
Map.addLayer(dataset.clip(table), visualization, "Land Use",false);
 
// Exsample of Export Raster Layer
 
 
Export.image.toDrive({
  image :dataset,
  description :'dataset',
  region :table,
  scale :30,
  maxPixels :1e13
});
 
 
//-----------------------------------------------------------------
 
 
var TWI = Terrain.select('aspect').clip(table);
Map.addLayer(TWI,imageVisParam9,'TWI',false);
 
  //---------------------M1DP---------------------------------
 
// chrips precipitation data
 
var chrips = ee.ImageCollection('UCSB-CHG/CHIRPS/DAILY')
.filterBounds(table)
.filterDate('2022-06-01','2022-11-30')
.select('precipitation');
 
print(chrips);
 
var chart = ui.Chart.image.series(chrips, table,
ee.Reducer.mean(), 1000, 'system:time_start').setChartType('ColumnChart')
.setOptions({
  title: 'precipitation changes over a year (CHIRPS)',
  vAxis: {title: 'precipitation mm/day'},
  hAxis: {title: 'date'},
  series:{
    0 : {color : 'black'}  }});
 
 
print(chart);
//----------------------------Soil------------------------------------
var KKK = ee.Image("OpenLandMap/SOL/SOL_TEXTURE-CLASS_USDA-TT_M/v02")
//print(Collection_L8_new,'Number of L8 Images');
 
Map.addLayer(KKK.clip(table),imageVisParam10,'Soil',false);
// -----------------------------------------------------------
